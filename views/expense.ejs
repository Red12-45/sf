<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Expense</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="icon" href="/favicon.ico?v=<%= v %>" type="image/x-icon">
  <!-- Font Awesome for Icons -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <!-- Link to the custom CSS file -->
  <link rel="stylesheet" href="/css/expenses.css">
</head>
<body>
  <!-- Sidebar -->
  <div class="sidebar" id="sidebar">
    <div class="sidebar-logo">
      <i class="fas fa-chart-line"></i>
      <span>Expense Report</span>
    </div>
    <div class="sidebar-nav">
      <div class="sidebar-section">
        <div class="sidebar-heading">Dashboard</div>
        <ul class="sidebar-menu">
          <li class="sidebar-item">
            <a href="/" class="sidebar-link">
              <i class="fas fa-home"></i><span>Dashboard</span>
            </a>
          </li>
          <li class="sidebar-item">
            <a href="/sales" class="sidebar-link">
              <i class="fas fa-shopping-cart"></i><span>Sales Report</span>
            </a>
          </li>
          <li class="sidebar-item">
            <a href="/profit" class="sidebar-link">
              <i class="fas fa-chart-bar"></i><span>Profit Report</span>
            </a>
          </li>
          <li class="sidebar-item">
            <a href="/expense" class="sidebar-link active">
              <i class="fas fa-money-bill-wave"></i><span>Expenses</span>
            </a>
          </li>
        </ul>
      </div>
      <div class="sidebar-section">
        <div class="sidebar-heading">Products</div>
        <ul class="sidebar-menu">
          <li class="sidebar-item">
            <a href="/add-product" class="sidebar-link">
              <i class="fas fa-plus-circle"></i><span>Add New Product</span>
            </a>
          </li>
          <li class="sidebar-item">
            <a href="/view-products" class="sidebar-link">
              <i class="fas fa-boxes"></i><span>View/Edit Products</span>
            </a>
          </li>
        </ul>
      </div>
      <div class="sidebar-section">
        <div class="sidebar-heading">Settings</div>
        <ul class="sidebar-menu">
          <li class="sidebar-item">
            <a href="/profile" class="sidebar-link">
              <i class="fas fa-user"></i><span>Profile</span>
            </a>
          </li>
        </ul>
      </div>
    </div>
    <div class="sidebar-footer">
      <a href="/logout">
        <i class="fas fa-sign-out-alt"></i><span>Logout</span>
      </a>
    </div>
  </div>

  <!-- Main Content Area -->
  <div class="main-content" id="main-content">
    <div class="page-container">
      <!-- Filter Form Card -->
      <div class="formBox">
        <form action="/expense" method="GET" id="filterForm">
          <div>
            <label for="month">Select Month:</label>
            <input type="month" name="month" id="month" value="<%= month %>" required>
            <input type="submit" value="Filter">
          </div>
        </form>
      </div>

      <!-- Expense Submission Form Card -->
      <div class="formBox">
        <form action="/expense" method="POST" id="expenseForm">
          <input type="hidden" name="saleDate" value="<%= month %>-01">
          <input type="hidden" name="redirectTo" value="expense">
          <div class="expense-row-inline">
            <div id="expenseItems">
              <div class="expense-row">
                <input type="text" name="expenseReason" placeholder="Expense Reason" class="expense-field" required>
                <input type="number" step="0.01" name="expenseCost" placeholder="Expense Amount" class="expense-field" required>
                <input type="hidden" name="expenseStatus" value="Paid Cash">
                <input type="hidden" name="expenseDetail1" value="">
                <input type="hidden" name="expenseDetail2" value="">
                <button type="button" class="removeExpense" style="display: none;">Remove</button>
              </div>
            </div>
            <div class="button-group">
              <button type="button" id="addExpense">Add More Expense</button>
              <input type="submit" value="Submit Expenses">
            </div>
          </div>
        </form>
      </div>

      <!-- Display Expense Records for the Selected Month -->
      <% if (groupedExpenses && Object.keys(groupedExpenses).length > 0) { %>
        <h2>Expenses for <%= month %></h2>
        <div id="expenseContainer">
          <% Object.keys(groupedExpenses).sort().forEach(function(expenseDate) { %>
            <div class="expense-group" data-date="<%= expenseDate %>">
              <h3>Expenses for <%= expenseDate %></h3>
              <table id="expenseTable-<%= expenseDate %>">
                <thead>
                  <tr>
                    <th>Reason</th><th>Amount</th><th>Method</th>
                    <th>Detail 1</th><th>Detail 2</th><th>Time</th><th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% groupedExpenses[expenseDate].forEach(function(expense) {
                       let created = (expense.createdAt.toDate)
                         ? expense.createdAt.toDate()
                         : new Date(expense.createdAt);
                       let timeStr = created.toLocaleTimeString();
                  %>
                    <tr>
                      <td><%= expense.expenseReason %></td>
                      <td><%= expense.expenseCost.toFixed(2) %></td>
                      <td><%= expense.expenseStatus %></td>
                      <td><%= expense.expenseDetail1 || '-' %></td>
                      <td><%= expense.expenseDetail2 || '-' %></td>
                      <td><%= timeStr %></td>
                      <td style="text-align:center;">
                        <i class="fas fa-trash-alt delete-expense-btn" data-id="<%= expense.id %>"></i>
                      </td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>
          <% }); %>
        </div>
        <h3>Total Expense for Month: â‚¹<span id="totalExpense"><%= totalExpense.toFixed(2) %></span></h3>
      <% } else { %>
        <p>No expenses found for this month.</p>
      <% } %>
    </div>
  </div>

  <script>
    // Sidebar toggle
    if (document.getElementById('sidebarToggle')) {
      document.getElementById('sidebarToggle').addEventListener('click', () => {
        document.getElementById('sidebar').classList.toggle('active');
        document.getElementById('main-content').classList.toggle('sidebar-open');
      });
    }

    // Add/remove dynamic rows
    document.getElementById('addExpense').addEventListener('click', () => {
      const expenseItems = document.getElementById('expenseItems');
      const newRow = document.createElement('div');
      newRow.className = 'expense-row';
      newRow.innerHTML = `
        <input type="text" name="expenseReason" placeholder="Expense Reason" class="expense-field" required>
        <input type="number" step="0.01" name="expenseCost" placeholder="Expense Amount" class="expense-field" required>
        <input type="hidden" name="expenseStatus" value="Paid Cash">
        <input type="hidden" name="expenseDetail1" value="">
        <input type="hidden" name="expenseDetail2" value="">
        <button type="button" class="removeExpense">Remove</button>`;
      expenseItems.appendChild(newRow);
      toggleRemoveButtons();
    });

    function toggleRemoveButtons() {
      document.querySelectorAll('#expenseItems .expense-row').forEach((row, i) => {
        row.querySelector('.removeExpense').style.display = i === 0 ? 'none' : 'inline-block';
      });
    }

    document.getElementById('expenseItems').addEventListener('click', e => {
      if (e.target.classList.contains('removeExpense')) {
        e.target.parentElement.remove();
        toggleRemoveButtons();
      }
    });

    async function postJSON(url, data) {
      const res = await fetch(url, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });
      const json = await res.json();
      if (!json.success) throw new Error(json.error || 'Unknown error');
      return json;
    }

    document.getElementById('expenseForm').addEventListener('submit', async e => {
      e.preventDefault();
      const fm = new FormData(e.target);
      const payload = {};
      for (let [key, value] of fm.entries()) {
        if (payload[key] !== undefined) {
          payload[key] = Array.isArray(payload[key])
            ? payload[key].concat(value)
            : [payload[key], value];
        } else {
          payload[key] = value;
        }
      }
      try {
        const { expense: ex, summary } = await postJSON('/api/expense', payload);
        let total = parseFloat(document.getElementById('totalExpense').textContent) || 0;
        // Parse Firestore timestamp if needed
        let createdAtDate;
        if (ex.createdAt && ex.createdAt._seconds) {
          createdAtDate = new Date(ex.createdAt._seconds * 1000);
        } else {
          createdAtDate = new Date(ex.createdAt);
        }
        const date = createdAtDate.toISOString().substring(0,10);
        let group = document.querySelector(`.expense-group[data-date="${date}"]`);
        if (!group) {
          const container = document.getElementById('expenseContainer');
          group = document.createElement('div');
          group.className = 'expense-group';
          group.dataset.date = date;
          group.innerHTML = `
            <h3>Expenses for ${date}</h3>
            <table id="expenseTable-${date}">
              <thead>
                <tr><th>Reason</th><th>Amount</th><th>Method</th><th>Detail 1</th><th>Detail 2</th><th>Time</th><th>Action</th></tr>
              </thead>
              <tbody></tbody>
            </table>`;
          document.getElementById('expenseContainer').appendChild(group);
        }
        const tbody = group.querySelector('tbody');
        const timeStr = createdAtDate.toLocaleTimeString();
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${ex.expenseReason}</td>
          <td>${Number(ex.expenseCost).toFixed(2)}</td>
          <td>${ex.expenseStatus}</td>
          <td>${ex.expenseDetail1 || '-'}</td>
          <td>${ex.expenseDetail2 || '-'}</td>
          <td>${timeStr}</td>
          <td style="text-align:center;"><i class="fas fa-trash-alt delete-expense-btn" data-id="${ex.id}"></i></td>`;
        tbody.prepend(row);
        total += parseFloat(ex.expenseCost);
        document.getElementById('totalExpense').textContent = total.toFixed(2);
        e.target.reset();
        toggleRemoveButtons();
      } catch (err) {
        alert(err.message);
      }
    });

    document.getElementById('expenseContainer').addEventListener('click', async e => {
      if (!e.target.classList.contains('delete-expense-btn')) return;
      if (!confirm('Delete this expense?')) return;
      try {
        await postJSON('/api/delete-expense', { expenseId: e.target.dataset.id });
        const tr = e.target.closest('tr');
        const cost = parseFloat(tr.children[1].textContent);
        tr.remove();
        let total = parseFloat(document.getElementById('totalExpense').textContent) - cost;
        document.getElementById('totalExpense').textContent = total.toFixed(2);
      } catch (err) {
        alert(err.message);
      }
    });
  </script>

  <script src="/js/firebasePersistence.js" type="module"></script>
</body>
</html>
