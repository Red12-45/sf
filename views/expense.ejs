<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Expense</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="icon" href="/favicon.ico?v=<%= v %>" type="image/x-icon">
  <!-- Font Awesome for Icons -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <!-- Link to the custom CSS file -->
  <link rel="stylesheet" href="/css/expenses.css?v=<%= v %>">
</head>
<body>
<%
  // determine if delete action is permitted
  const canDelete = !(blockedActions['/expense'] || []).includes('delete');

  // helper to format "YYYY-MM" into "Month YYYY"
  function formatMonthYear(ym) {
    const [year, month] = ym.split('-');
    const date = new Date(year, month - 1);
    return date.toLocaleString('en-US', { month: 'long', year: 'numeric' });
  }

  // helper to format "YYYY-MM-DD" into "Month D"
  function formatDate(fd) {
    const [year, month, day] = fd.split('-');
    const date = new Date(year, month - 1, day);
    return date.toLocaleString('en-US', { month: 'long', day: 'numeric' });
  }

  // build list of dates that actually have expenses
  const expenseDates = groupedExpenses
    ? Object.keys(groupedExpenses)
        .sort()
        .filter(d => Array.isArray(groupedExpenses[d]) && groupedExpenses[d].length > 0)
    : [];
%>

  <!-- Sidebar -->
  <div class="sidebar" id="sidebar">
    <div class="sidebar-logo">
      <i class="fas fa-chart-line"></i>
      <span>Expense Report</span>
    </div>
    <div class="sidebar-nav">
      <div class="sidebar-section">
        <div class="sidebar-heading">Dashboard</div>
        <ul class="sidebar-menu">
          <li class="sidebar-item">
            <a href="/" class="sidebar-link">
              <i class="fas fa-home"></i><span>Dashboard</span>
            </a>
          </li>
          <li class="sidebar-item">
            <a href="/sales" class="sidebar-link">
              <i class="fas fa-shopping-cart"></i><span>Sales Report</span>
            </a>
          </li>
          <li class="sidebar-item">
            <a href="/profit" class="sidebar-link">
              <i class="fas fa-chart-bar"></i><span>Profit Report</span>
            </a>
          </li>
          <li class="sidebar-item"><a href="/performance" class="sidebar-link"><i class="fas fa-rocket"></i> Performance</a></li>
          <li class="sidebar-item"><a href="/stats" class="sidebar-link"><i class="fas fa-chart-pie"></i> Stats</a></li>
          <li class="sidebar-item">
            <a href="/expense" class="sidebar-link active">
              <i class="fas fa-money-bill-wave"></i><span>Expenses</span>
            </a>
          </li>
        </ul>
      </div>
      <div class="sidebar-section">
        <div class="sidebar-heading">Products</div>
        <ul class="sidebar-menu">
          <li class="sidebar-item">
            <a href="/add-product" class="sidebar-link">
              <i class="fas fa-plus-circle"></i><span>Add New Product</span>
            </a>
          </li>
          <li class="sidebar-item">
            <a href="/view-products" class="sidebar-link">
              <i class="fas fa-boxes"></i><span>View/Edit Products</span>
            </a>
          </li>
        </ul>
      </div>
      <div class="sidebar-section">
        <div class="sidebar-heading">Settings</div>
        <ul class="sidebar-menu">
          <li class="sidebar-item">
            <a href="/profile" class="sidebar-link">
              <i class="fas fa-user"></i><span>Profile</span>
            </a>
          </li>
        </ul>
      </div>
    </div>
    <div class="sidebar-footer">
      <a href="/logout">
        <i class="fas fa-sign-out-alt"></i><span>Logout</span>
      </a>
    </div>
  </div>

  <!-- Main Content Area -->
  <div class="main-content" id="main-content">
    <div class="page-container">
      <!-- Filter Form Card -->
      <div class="formBox">
        <form action="/expense" method="GET" id="filterForm">
          <input type="hidden" name="_csrf" value="<%= csrfToken %>">
          <div>
            <label for="month">Select Month:</label>
            <input type="month" name="month" id="month" value="<%= month %>" required>
            <input type="submit" value="Filter">
          </div>
        </form>
      </div>

      <!-- Expense Submission Form Card -->
      <div class="formBox">
        <form action="/expense" method="POST" id="expenseForm">
          <input type="hidden" name="_csrf" value="<%= csrfToken %>">
          <input type="hidden" name="saleDate" value="<%= month %>-01">
          <input type="hidden" name="redirectTo" value="expense">
         <div class="expense-form-wrapper">
  <div id="expenseItems"> 
    <div class="expense-row">
      <input type="text" name="expenseReason" placeholder="Expense Reason" class="expense-field" required>
      <input type="number" step="0.01" name="expenseCost" placeholder="Expense Amount" class="expense-field" required>
      <input type="hidden" name="expenseStatus" value="Paid Cash">
      <input type="hidden" name="expenseDetail1" value="">
      <input type="hidden" name="expenseDetail2" value="">
      <button type="button" class="removeExpense" style="display: none;">Remove</button>
    </div>
  </div>

  <div class="expense-button-group">
    <button type="button" id="addExpense">Add More Expense</button>
    <input type="submit" value="Submit Expenses">
  </div>
</div>

        </form>
      </div>

      <% if (expenseDates.length > 0) { %>
        <!-- Month Header -->
       <div class="month-summary">
  <div class="month-title">
    <i class="fas fa-calendar-alt"></i>
    Expenses for <%= formatMonthYear(month) %>
  </div>
  <div class="month-total">
    <i class="fas fa-wallet"></i>
    Total: ₹<span id="totalExpense"><%= totalExpense.toFixed(2) %></span>
  </div>
</div>


        <div id="expenseContainer">
          <% expenseDates.forEach(function(expenseDate) { %>
            <div class="expense-group" data-date="<%= expenseDate %>">
              <h3>Expenses for <%= formatDate(expenseDate) %></h3>
              <table id="expenseTable-<%= expenseDate %>">
                <thead>
                  <tr>
                    <th>Reason</th>
                    <th>Amount</th>
                    <th>Method</th>
                    <th>Detail 1</th>
                    <th>Detail 2</th>
                    <th>Time</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% groupedExpenses[expenseDate].forEach(function(expense) {
                       const created = expense.createdAt.toDate
                         ? expense.createdAt.toDate()
                         : new Date(expense.createdAt);
                       const timeStr = created.toLocaleTimeString();
                  %>
                    <tr>
                      <td><%= expense.expenseReason %></td>
                      <td><%= expense.expenseCost.toFixed(2) %></td>
                      <td><%= expense.expenseStatus %></td>
                      <td><%= expense.expenseDetail1 || '-' %></td>
                      <td><%= expense.expenseDetail2 || '-' %></td>
                      <td><%= timeStr %></td>
                      <td style="text-align:center;">
                        <% if (canDelete) { %>
                          <i class="fas fa-trash-alt delete-expense-btn"
                             data-id="<%= expense.id %>"></i>
                        <% } %>
                      </td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>
          <% }); %>
        </div>

      <% } else { %>
        <p>No expenses found for this month.</p>
      <% } %>

    </div>
  </div>

<script>
/* ———————————————————————————————————————————————
   GLOBAL CONSTANTS (set by EJS)
——————————————————————————————————————————————— */
const CAN_DELETE  = <%= canDelete ? 'true' : 'false' %>;
const CSRF_TOKEN  = '<%- csrfToken %>';

/* ———————————————————————————————————————————————
   SIDEBAR TOGGLE
——————————————————————————————————————————————— */
const sidebarToggle = document.getElementById('sidebarToggle');
if (sidebarToggle) {
  sidebarToggle.addEventListener('click', () => {
    document.getElementById('sidebar').classList.toggle('active');
    document.getElementById('main-content').classList.toggle('sidebar-open');
  });
}

/* ———————————————————————————————————————————————
   DYNAMIC “ADD MORE EXPENSE” ROWS
——————————————————————————————————————————————— */
const expenseItems = document.getElementById('expenseItems');
document.getElementById('addExpense').addEventListener('click', () => {
  const row = document.createElement('div');
  row.className = 'expense-row';
  row.innerHTML = `
    <input type="text"  name="expenseReason" placeholder="Expense Reason"  class="expense-field" required>
    <input type="number" step="0.01" name="expenseCost"   placeholder="Expense Amount" class="expense-field" required>
    <input type="hidden" name="expenseStatus"  value="Paid Cash">
    <input type="hidden" name="expenseDetail1" value="">
    <input type="hidden" name="expenseDetail2" value="">
    <button type="button" class="removeExpense">Remove</button>`;
  expenseItems.appendChild(row);
  toggleRemoveButtons();
});

function toggleRemoveButtons () {
  document.querySelectorAll('#expenseItems .expense-row').forEach((row, i) => {
    row.querySelector('.removeExpense').style.display = i === 0 ? 'none' : 'inline-block';
  });
}

expenseItems.addEventListener('click', e => {
  if (e.target.classList.contains('removeExpense')) {
    e.target.parentElement.remove();
    toggleRemoveButtons();
  }
});

/* ———————————————————————————————————————————————
   POST-JSON HELPER  (adds CSRF + robust parsing)
——————————————————————————————————————————————— */
async function postJSON (url, data) {
  const res = await fetch(url, {
    method : 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': CSRF_TOKEN          
    },
    credentials : 'same-origin',
    body        : JSON.stringify(data)
  });

  const isJSON = res.headers.get('content-type')?.includes('application/json');
  const payload = isJSON ? await res.json() : await res.text();

  if (!isJSON) throw new Error(payload || 'Server returned non-JSON response');
  if (!payload.success) throw new Error(payload.error || 'Unknown error');
  return payload;
}

/* ———————————————————————————————————————————————
   SUBMIT EXPENSE FORM  (AJAX)
——————————————————————————————————————————————— */
document.getElementById('expenseForm').addEventListener('submit', async e => {
  e.preventDefault();

  const fd   = new FormData(e.target);
  const body = {};
  for (const [k, v] of fd.entries()) {
    body[k] = body[k] !== undefined
      ? (Array.isArray(body[k]) ? body[k].concat(v) : [body[k], v])
      : v;
  }

  try {
    const { expense: ex } = await postJSON('/api/expense', body);

    const createdAt = ex.createdAt && ex.createdAt._seconds
        ? new Date(ex.createdAt._seconds * 1000)
        : new Date(ex.createdAt);
    const dateStr   = createdAt.toISOString().substring(0, 10);

    let group = document.querySelector(`.expense-group[data-date="${dateStr}"]`);
    if (!group) {
      // if this date wasn't shown before, create it now
      const container = document.getElementById('expenseContainer');
      group = document.createElement('div');
      group.className   = 'expense-group';
      group.dataset.date = dateStr;
      group.innerHTML   = `
        <h3>Expenses for ${formatDate(dateStr)}</h3>
        <table id="expenseTable-${dateStr}">
          <thead>
            <tr>
              <th>Reason</th><th>Amount</th><th>Method</th><th>Detail 1</th><th>Detail 2</th><th>Time</th><th>Action</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>`;
      container.appendChild(group);
    }

    const tbody = group.querySelector('tbody');
    const row   = document.createElement('tr');
    row.innerHTML = `
      <td>${ex.expenseReason}</td>
      <td>${Number(ex.expenseCost).toFixed(2)}</td>
      <td>${ex.expenseStatus}</td>
      <td>${ex.expenseDetail1 || '-'}</td>
      <td>${ex.expenseDetail2 || '-'}</td>
      <td>${createdAt.toLocaleTimeString()}</td>
      <td style="text-align:center;">
        ${CAN_DELETE
          ? `<i class="fas fa-trash-alt delete-expense-btn" data-id="${ex.id}"></i>`
          : ''}
      </td>`;
    tbody.prepend(row);

    // update total
    const totalEl  = document.getElementById('totalExpense');
    const newTotal = (parseFloat(totalEl.textContent) || 0) + parseFloat(ex.expenseCost);
    totalEl.textContent = newTotal.toFixed(2);

    e.target.reset();
    toggleRemoveButtons();

  } catch (err) {
    alert(err.message);
  }
});

/* ———————————————————————————————————————————————
   DELETE EXPENSE  (AJAX)
——————————————————————————————————————————————— */
document.getElementById('expenseContainer').addEventListener('click', async e => {
  if (!e.target.classList.contains('delete-expense-btn')) return;
  if (!confirm('Delete this expense?')) return;

  try {
    await postJSON('/api/delete-expense', { expenseId: e.target.dataset.id });

    const tr   = e.target.closest('tr');
    const cost = parseFloat(tr.children[1].textContent);
    tr.remove();

    const totalEl  = document.getElementById('totalExpense');
    const newTotal = (parseFloat(totalEl.textContent) || 0) - cost;
    totalEl.textContent = newTotal.toFixed(2);

  } catch (err) {
    alert(err.message);
  }
});
</script>

<!-- keep this exactly where it was -->
<script src="/js/firebasePersistence.js" type="module"></script>

</body>
</html>
