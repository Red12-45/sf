<!-- views/viewProducts.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>View Products</title>
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/viewProducts.css">
  <link rel="icon" href="/favicon.ico" type="image/x-icon">
</head>
<body>
  <!-- Sidebar omitted for brevity; keep your existing sidebar here -->

  <div class="main-content" id="main-content">
    <div class="page-container">
      <!-- Filters and header omitted; keep your existing filter form and page header -->

      <% if (products.length===0) { %>
        <div class="empty-state"><i class="fas fa-box-open"></i><p>No products available.</p></div>
      <% } else { %>
        <div class="products-table-container">
          <table class="products-table">
            <thead>
              <tr>
                <th></th>
                <th>Serial No.</th>
                <th>Product Name</th>
                <th>Wholesale Price</th>
                <th>Retail Price</th>
                <th>Quantity</th>
                <th>Unit</th>
                <th>Profit Margin</th>
                <th>Category</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
            <% products.forEach(function(product,index){ %>
              <tr id="product-row-<%= product.id %>">
                <td>
                  <% if (product.batches && product.batches.length>0) { %>
                    <button onclick="toggleBatches('<%= product.id %>')">
                      <i class="fas fa-chevron-down" id="icon-<%= product.id %>"></i>
                    </button>
                  <% } %>
                </td>
                <td><%= index+1 %></td>
                <td><%= product.productName %></td>
                <td>₹<%= product.wholesalePrice.toFixed(2) %></td>
                <td>₹<%= product.retailPrice.toFixed(2) %></td>
                <td><%= product.quantity %></td>
                <td><%= product.unit||'-' %></td>
                <td>₹<%= product.profitMargin.toFixed(2) %></td>
                <td><span class="category-badge"><%= product.category||'-' %></span></td>
                <td><!-- your delete button --></td>
              </tr>

              <% if (product.batches && product.batches.length>0) { %>
                <tr class="batches-container" id="batches-<%= product.id %>">
                  <td colspan="10">
                    <table class="batch-table">
                      <thead>
                        <tr>
                          <th>Batch Date</th>
                          <th>Purchase Price</th>
                          <th>Retail Price</th>
                          <th>Quantity</th>
                          <th>Remaining</th>
                          <th>Profit Margin</th>
                          <th></th>
                        </tr>
                      </thead>
                      <tbody>
                        <% product.batches.forEach(function(batch){ 
                             const d = batch.batchDate.seconds
                               ? new Date(batch.batchDate.seconds*1000)
                               : new Date(batch.batchDate);
                        %>
                        <tr data-batch-id="<%= batch.id %>">
                          <td><%= d.toLocaleDateString() %> <%= d.toLocaleTimeString() %></td>
                          <td class="editable-cell" data-field="purchasePrice">
                            <span class="value">₹<%= batch.purchasePrice.toFixed(2) %></span>
                            <i class="fas fa-pencil-alt edit-icon"></i>
                            <i class="fas fa-save save-icon" style="display:none;"></i>
                          </td>
                          <td class="editable-cell" data-field="salePrice">
                            <span class="value">₹<%= batch.salePrice.toFixed(2) %></span>
                            <i class="fas fa-pencil-alt edit-icon"></i>
                            <i class="fas fa-save save-icon" style="display:none;"></i>
                          </td>
                          <td class="editable-cell" data-field="quantity">
                            <span class="value"><%= batch.quantity %></span>
                            <i class="fas fa-pencil-alt edit-icon"></i>
                            <i class="fas fa-save save-icon" style="display:none;"></i>
                          </td>
                          <td class="remaining"><%= batch.remainingQuantity %></td>
                          <td class="profit">₹<%= (batch.salePrice - batch.purchasePrice).toFixed(2) %></td>
                          <td><!-- empty for alignment --></td>
                        </tr>
                        <% }) %>
                      </tbody>
                    </table>
                  </td>
                </tr>
              <% } %>
            <% }) %>
            </tbody>
          </table>
        </div>
      <% } %>
    </div>
  </div>

<script>
function toggleBatches(id){
  const row = document.getElementById('batches-'+id);
  const icon = document.getElementById('icon-'+id);
  if (!row) return;
  if (row.classList.contains('show')){
    row.classList.remove('show');
    icon.classList.replace('fa-chevron-up','fa-chevron-down');
  } else {
    row.classList.add('show');
    icon.classList.replace('fa-chevron-down','fa-chevron-up');
  }
}

// Delegate clicks on edit/save icons
document.querySelectorAll('.editable-cell').forEach(cell => {
  const editIcon = cell.querySelector('.edit-icon');
  const saveIcon = cell.querySelector('.save-icon');
  const field = cell.dataset.field;

  editIcon.addEventListener('click', () => {
    const valSpan = cell.querySelector('.value');
    let raw = valSpan.textContent.replace('₹','').trim();
    const input = document.createElement('input');
    input.type = field==='quantity' ? 'number' : 'text';
    input.value = raw;
    input.className = 'edit-input';
    cell.insertBefore(input, valSpan);
    valSpan.style.display = 'none';
    editIcon.style.display = 'none';
    saveIcon.style.display = '';
  });

  saveIcon.addEventListener('click', async () => {
    const tr = cell.closest('tr');
    const batchId = tr.dataset.batchId;
    // gather all three fields
    const row = tr;
    const pCell = row.querySelector('[data-field="purchasePrice"]');
    const rCell = row.querySelector('[data-field="salePrice"]');
    const qCell = row.querySelector('[data-field="quantity"]');
    const pVal = parseFloat(pCell.querySelector('.edit-input')?.value ?? pCell.querySelector('.value').textContent.replace('₹',''));
    const rVal = parseFloat(rCell.querySelector('.edit-input')?.value ?? rCell.querySelector('.value').textContent.replace('₹',''));
    const qVal = parseInt(qCell.querySelector('.edit-input')?.value ?? qCell.querySelector('.value').textContent,10);

    const res = await fetch(`/api/update-stock-batch/${batchId}`, {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify({
        purchasePrice: pVal,
        salePrice: rVal,
        quantity: qVal
      })
    });
    const data = await res.json();
    if (!data.success) {
      alert('Update failed: ' + (data.error || ''));
      return;
    }

    // update all three cells and profit/remaining
    const profitCell = row.querySelector('.profit');
    const remainingCell = row.querySelector('.remaining');
    const newProfit = (rVal - pVal).toFixed(2);

    [[pCell,pVal,'₹'+pVal.toFixed(2)], [rCell,rVal,'₹'+rVal.toFixed(2)], [qCell,qVal,qVal]]
      .forEach(([c, raw, text]) => {
        const span = c.querySelector('.value');
        span.textContent = text;
        span.style.display = '';
        const inp = c.querySelector('.edit-input');
        if (inp) inp.remove();
        c.querySelector('.edit-icon').style.display = '';
        c.querySelector('.save-icon').style.display = 'none';
      });

    profitCell.textContent = '₹'+newProfit;
    remainingCell.textContent = qVal;
  });
});
</script>
</body>
</html>
